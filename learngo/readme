1. Go 中的面向对象:
OO 语言最重要的三个方面分别是：封装，继承和多态，在 Go 中它们是怎样表现的呢？

封装（数据隐藏）：和别的 OO 语言有 4 个或更多的访问层次相比，Go 把它简化为了 2 层:
1）包范围内的：通过标识符首字母小写，对象 只在它所在的包内可见
2）可导出的：通过标识符首字母大写，对象 对所在包以外也可见
3) 类型只拥有自己所在包中定义的方法

继承：用组合实现：内嵌一个（或多个）包含想要的行为（字段和方法）的类型；多重继承可以通过内嵌多个类型实现

多态：用接口实现：某个类型的实例可以赋给它所实现的任意接口类型的变量。类型和接口是松耦合的，并且多重继承可以通过实现多个接口实现。

2. 何时使用new()和make()
- 切片slice、映射map和通道channel，使用make
- 数组[]、结构体struct和所有的值类型，使用new 

3. Go中的引用类型:
	reference types: slices, maps, channels, pointers, functions

4. Go内存逃逸：
   https://studygolang.com/articles/12994

5. go tool pprof：对CPU、堆内存、goroutine 阻塞事件进行记录分析；
   https://github.com/hyper0x/go_command_tutorial/blob/master/0.12.md


